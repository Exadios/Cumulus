################################################################################
# Makefile to build a Cumulus release based on Qt4.7.x/X11
#
# Copyright (c): 2008-2013 by Axel Pauli (axel@kflog.org)
# 
# $Id$
#
# This file is distributed under the terms of the General Public License.
# See the file COPYING for more information.
#
################################################################################

# adapt call pathes to your needs if necessary
QMAKE    = qmake
LRELEASE = lrelease

# Version is determined from the header file target.h
VERSION=$(shell cat cumulus/target.h | grep CU_VERSION | cut -d '"' -f 2)

QTVERSION=$(shell $(QMAKE) -query QT_VERSION)

# Qt's translation directory
QT_TRANSLATIONS=/usr/share/qt4/translations

CUMULUS_REL=cumulus-$(VERSION)

# Debian package build directories
CUMULUS_DEB_ROOT=dpkg/X11
CUMULUS_DEB=$(CUMULUS_DEB_ROOT)/$(CUMULUS_REL)

# Debian source package options
SRC_PACK=-sa -S

# Debian binary package options
BIN_PACK=-b

# adapt install path to your needs if necessary
INSTALL_ROOT = /opt/cumulus

# dh_make tool version 0.58 requires option '-r old' to get working right
ifeq "$(shell dh_make -v | grep -c 'version 0\.58')" "1"
	DH_MAKE_OPT=-r old
endif

# date in debian package format
DATE=$(shell date -R)

# Reset language environment because the date can be formatted according
# to local rules. That does not like dpkg-buildpackage.
LANG=C

.PHONY : usage

usage:
	@echo ""
	@echo "Cumulus build environment for Linux/X11 and Qt4.8"
	@echo ""
	@echo "Installed Qt version $(QTVERSION)"
	@echo ""
	@echo "usage: make -f Makefile.X11 <target> ..."
	@echo "  all          - Builds the whole Cumulus application"
	@echo "  clean        - Removes all build results"
	@echo "  install      - Installs Cumulus under $(INSTALL_ROOT)"
	@echo "  deinstall    - Deinstalls Cumulus under $(INSTALL_ROOT)"
	@echo "  release      - Cleans the build area before build"
	@echo "  dpkg         - Builds a Debian binary package under the directory dpkg"
	@echo "  dpkg_src     - Builds a Debian source package under the directory dpkg"
	
all:	qmake
	@echo "Using Qt version $(QTVERSION)"
	cd cumulus; make
	cd gpsClient; make
	cd nmeaSimulator; make

.PHONY : clean
clean:
	@if [ -f cumulus/Makefile ]; \
	then \
		cd cumulus; make distclean; rm -f Makefile; \
	fi
	@if [ -f gpsClient/Makefile ]; \
	then \
		cd gpsClient; make distclean; rm -f Makefile; \
	fi
	@if [ -f nmeaSimulator/Makefile ]; \
	then \
		cd nmeaSimulator; make distclean; rm -f Makefile; \
	fi
	@echo "Build area cleaned"

.PHONY : check_dir
check_dir:
	@if [ -e $(INSTALL_ROOT) -a ! -w  $(INSTALL_ROOT) ]; \
	then \
		echo "Install Directory '$(INSTALL_ROOT)' not writeable - Are you root?"; \
		exit 99; \
	fi

.PHONY : install
install: check_dir deinstall install_lang
	@echo "===== Installing Cumulus $(VERSION) under $(INSTALL_ROOT) ====="
	install -d $(INSTALL_ROOT)/bin
	install -d $(INSTALL_ROOT)/etc
	install -d $(INSTALL_ROOT)/help/en
	install -d $(INSTALL_ROOT)/icons
	install -d $(INSTALL_ROOT)/icons/small
	install -d $(INSTALL_ROOT)/icons/windarrows
	install -d $(INSTALL_ROOT)/locale
	install -d $(INSTALL_ROOT)/sounds
	install --mode=755 cumulus/cumulus $(INSTALL_ROOT)/bin
	install --mode=755 gpsClient/gpsClient $(INSTALL_ROOT)/bin
	install --mode=755 nmeaSimulator/nmeaSimu $(INSTALL_ROOT)/bin
	install --mode=644 etc/glider.pol $(INSTALL_ROOT)/etc
	install --mode=644 icons/*.xpm $(INSTALL_ROOT)/icons
	install --mode=644 icons/*.png $(INSTALL_ROOT)/icons
	install --mode=644 icons/small/* $(INSTALL_ROOT)/icons/small
	install --mode=644 icons/windarrows/* $(INSTALL_ROOT)/icons/windarrows
	install --mode=644 help/en/* $(INSTALL_ROOT)/help/en
	install --mode=644 sounds/*.wav $(INSTALL_ROOT)/sounds

.PHONY : install_lang
install_lang:
	@echo "===== Installing Cumulus $(VERSION) languages under $(INSTALL_ROOT) ====="
	install -d $(INSTALL_ROOT)/locale/de
	install -d $(INSTALL_ROOT)/help/de
	install --mode=644 help/de/* $(INSTALL_ROOT)/help/de
	cd cumulus; \
		$(LRELEASE) -silent -removeidentical -nounfinished cumulus_de.ts -qm $(INSTALL_ROOT)/locale/de/cumulus_de.qm
	chmod 644 $(INSTALL_ROOT)/locale/de/cumulus_de.qm
	cd locale/de; \
		$(LRELEASE) -silent -removeidentical -nounfinished qt_de.ts -qm $(INSTALL_ROOT)/locale/de/qt_de.qm
	chmod 644 $(INSTALL_ROOT)/locale/de/qt_de.qm

.PHONY : deinstall
deinstall:
	rm -rf $(INSTALL_ROOT)/*

.PHONY : release
release: clean all

qmake: cumulus/Makefile gpsClient/Makefile nmeaSimulator/Makefile

cumulus/Makefile: cumulus/cumulusX11.pro
	cd cumulus; $(QMAKE) cumulusX11.pro -o Makefile

gpsClient/Makefile: gpsClient/gpsClientX11.pro
	cd gpsClient; $(QMAKE) gpsClientX11.pro -o Makefile

nmeaSimulator/Makefile: nmeaSimulator/simuX11.pro
	cd nmeaSimulator; $(QMAKE) simuX11.pro -o Makefile
	
####################################################
# call target dpkg to build a debian Cumulus package
####################################################

.PHONY : dpkg dpkg_src dpkg_prepare dpkg_make dpkg_build

# This target builds a Debian binary package
dpkg:
	@echo "===== Building a Debian binary package for Cumulus $(VERSION) ====="
	@$(MAKE) -f Makefile.X11 VERSION=$(VERSION) \
		DPKG_OPT=$(BIN_PACK) DH_MAKE_OPT="-s --native" \
		dpkg_prepare dpkg_make dpkg_build

# This target builds a Debian source package. 
dpkg_src:
	@echo "===== Building a Debian source package for Cumulus $(VERSION) ====="
	$(MAKE) -f Makefile.X11 VERSION=$(VERSION) \
		DPKG_OPT="$(SRC_PACK)" DH_MAKE_OPT="-s --createorig" \
		dpkg_prepare dpkg_make dpkg_build

# This target prepares the Debian build. A fresh copy of Cumulus is cheched out
# from subversion. Therefore you need subversion access!
dpkg_prepare:
	@rm -fr $(CUMULUS_DEB_ROOT)/*$(VERSION)*
	@mkdir -p $(CUMULUS_DEB)
	svn export --quiet --force https://svn.kflog.org/svn/repos/cumulus/qt4/trunk $(CUMULUS_DEB)

# This target creates the debian package files. It is called via another makefile
# due to the VERSION macro. The special letters apostroph and quotation mark
# cause problems in other shell commands, if they not expanded before.
dpkg_make:
	@rm -rf $(CUMULUS_DEB)/debian
	cd $(CUMULUS_DEB); \
	export DEBEMAIL='kflog.cumulus@gmail.com'; \
	export DEBFULLNAME='Axel Pauli'; \
	echo '\n' | dh_make --packagename cumulus -c GPL $(DH_MAKE_OPT)
	cd $(CUMULUS_DEB)/dpkg/X11/control; \
	cp control rules ../../../debian/; \
	sed -e "s/__VERSION__/$(VERSION)/g" -e "s/__DATE__/$(DATE)/g" copyright > ../../../debian/copyright; \
	sed -e "s/__VERSION__/$(VERSION)/g" -e "s/__DATE__/$(DATE)/g" changelog > ../../../debian/changelog
	
# This target builds the debian package, if all is prepared before.
dpkg_build:
	cd $(CUMULUS_DEB); \
	dpkg-buildpackage -rfakeroot $(DPKG_OPT)

# Copies all files of KFLog into the debian package area. It is called by the
# Debian rule file.
.PHONY : dpkg_install

dpkg_install:
	@echo '===== Installing Cumulus $(VERSION) under $(DESTDIR)$(INSTALL_ROOT) ====='
	strip cumulus/cumulus
	strip gpsClient/gpsClient
	strip nmeaSimulator/nmeaSimu
	install -d $(DESTDIR)/$(INSTALL_ROOT)/bin
	install -d $(DESTDIR)/$(INSTALL_ROOT)/etc
	install -d $(DESTDIR)/$(INSTALL_ROOT)/help/en
	install -d $(DESTDIR)/$(INSTALL_ROOT)/help/de
	install -d $(DESTDIR)/$(INSTALL_ROOT)/icons
	install -d $(DESTDIR)/$(INSTALL_ROOT)/icons/small
	install -d $(DESTDIR)/$(INSTALL_ROOT)/icons/windarrows
	install -d $(DESTDIR)/$(INSTALL_ROOT)/locale/de
	install -d $(DESTDIR)/$(INSTALL_ROOT)/sounds
	install -d $(DESTDIR)/usr/share/applications
	install --mode=755 cumulus/cumulus $(DESTDIR)/$(INSTALL_ROOT)/bin
	install --mode=755 gpsClient/gpsClient $(DESTDIR)/$(INSTALL_ROOT)/bin
	install --mode=755 nmeaSimulator/nmeaSimu $(DESTDIR)/$(INSTALL_ROOT)/bin
	install --mode=644 etc/glider.pol $(DESTDIR)/$(INSTALL_ROOT)/etc
	install --mode=644 icons/*.xpm $(DESTDIR)/$(INSTALL_ROOT)/icons
	install --mode=644 icons/*.png $(DESTDIR)/$(INSTALL_ROOT)/icons
	install --mode=644 icons/small/* $(DESTDIR)/$(INSTALL_ROOT)/icons/small
	install --mode=644 icons/windarrows/* $(DESTDIR)/$(INSTALL_ROOT)/icons/windarrows
	install --mode=644 help/en/*.html help/en/text.css $(DESTDIR)/$(INSTALL_ROOT)/help/en
	install --mode=644 help/de/*.html help/de/text.css $(DESTDIR)/$(INSTALL_ROOT)/help/de
	install --mode=644 help/en/cumulus.png $(DESTDIR)/$(INSTALL_ROOT)/help/en/cumulus.png
	install --mode=644 help/de/cumulus.png $(DESTDIR)/$(INSTALL_ROOT)/help/de/cumulus.png
	install --mode=644 sounds/*.wav $(DESTDIR)/$(INSTALL_ROOT)/sounds
	install --mode=644 dpkg/X11/other/cumulus.desktop $(DESTDIR)/usr/share/applications
	# add German translations to package
	install --mode=644 $(QT_TRANSLATIONS)/qt_de.qm $(DESTDIR)/$(INSTALL_ROOT)/locale/de/qt_de.qm
	$(LRELEASE) -silent -removeidentical -nounfinished cumulus/cumulus_de.ts -qm $(DESTDIR)/$(INSTALL_ROOT)/locale/de/cumulus_de.qm
	chmod 644 $(DESTDIR)/$(INSTALL_ROOT)/locale/de/cumulus_de.qm

# copies change log and debian packages to the kflog web page
.PHONY : copy2web copysrc2web

copy2web:
	#scp -C ChangeLog web31_axel@kflog.org:/srv/www/web31/web/fileadmin/user_upload/cumulus_snapshots/ChangeLog_$(VERSION)_`date '+%F'`
	scp -C dpkg/X11/cumulus_$(VERSION)_i386.changes \
	       web31_axel@kflog.org:/srv/www/web31/web/fileadmin/user_upload/cumulus_snapshots/cumulus_$(VERSION)_ubuntu_i386.changes
	scp -C dpkg/X11/cumulus_$(VERSION)_i386.deb \
	       web31_axel@kflog.org:/srv/www/web31/web/fileadmin/user_upload/cumulus_snapshots/cumulus_$(VERSION)_ubuntu_i386.deb

# copy Ubuntu Debian source package to webpage
copysrc2web:
	ssh web31_axel@kflog.org 'mkdir -p /srv/www/web31/web/fileadmin/user_upload/cumulus_snapshots/$(VERSION)'
	cd dpkg/X11; \
	scp -C cumulus_$(VERSION).debian.tar.gz \
	       cumulus_$(VERSION).dsc \
	       cumulus_$(VERSION).orig.tar.gz \
	       cumulus_$(VERSION)_source.changes \
	       web31_axel@kflog.org:/srv/www/web31/web/fileadmin/user_upload/cumulus_snapshots/$(VERSION)
	